# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2017-09-26 13:31
from __future__ import unicode_literals

from django.db import migrations


def move_url_fields_to_glossurl(apps, schema_editor):
    # We get the model from the versioned app registry;
    # if we directly import it, it'll be the wrong version
    Gloss = apps.get_model("dictionary", "Gloss")
    GlossURL = apps.get_model("dictionary", "GlossURL")

    # Get all glosses that have something in 'url_field'.
    glosses_with_url_field = Gloss.objects.exclude(url_field__exact='').exclude(url_field__isnull=True)

    # If there are glosses with data in 'url_field', move that data to GlossURL model by creating new instances.
    if glosses_with_url_field.count() > 0:
        for gloss in glosses_with_url_field:
            try:
                # Create a GlossURL object out of the gloss.url_field data.
                GlossURL.objects.create(gloss=gloss, url=gloss.url_field)
            except:
                # If creation fails, jump to the next object in the QuerySet. (We might have this url already).
                continue
            try:
                # Make the gloss.url_field an empty string and save changes.
                gloss.url_field = ''
                gloss.save()
            except:
                # Do nothing, because the migration will delete the field anyway.
                # You can write your own logic here, for instance if you want to cancel the whole operation.
                pass


class Migration(migrations.Migration):

    dependencies = [
        ('dictionary', '0034_auto_20170925_1530'),
    ]

    operations = [
        migrations.RunPython(move_url_fields_to_glossurl),
        migrations.RemoveField(
            model_name='gloss',
            name='url_field',
        ),
    ]
